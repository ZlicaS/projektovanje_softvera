/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.panel;

import domain.Klijent;
import domain.OpstaDomenskaKlasa;
import domain.Zaposleni;
import forma.FrmDialog;
import forma.FrmForma;
import forma.GlavnaForma;
import forma.IPanel;
import forma.ModForme;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import kontroler.Kontroler;

/**
 *
 * @author Sapsaj
 */
public class PnlUnosKlijenta extends javax.swing.JPanel implements IPanel {

    private ModForme model;

    /**
     * Creates new form PnlUnosKlijenta
     */
    public PnlUnosKlijenta(ModForme model) {
        initComponents();
        napuniCB();
        pripremiFormu(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImeIPrezime = new javax.swing.JLabel();
        txtImeIPrezime = new javax.swing.JTextField();
        lblDatumRodjenja = new javax.swing.JLabel();
        dpDatum = new datechooser.beans.DateChooserCombo();
        lblBrojTelefona = new javax.swing.JLabel();
        txtBrojTelefona = new javax.swing.JTextField();
        lblVozackaDozvola = new javax.swing.JLabel();
        cbVozackaDozvola = new javax.swing.JComboBox<>();
        lblPrijavljeniZaposleni = new javax.swing.JLabel();
        lblZaposleni = new javax.swing.JLabel();
        btnIzmeni = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Unos klijenta"));
        setToolTipText("");

        lblImeIPrezime.setText("Ime i prezime:");

        txtImeIPrezime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImeIPrezimeActionPerformed(evt);
            }
        });

        lblDatumRodjenja.setText("Datum rodjenja:");

        dpDatum.setLocale(new java.util.Locale("sr", "BA", ""));

        lblBrojTelefona.setText("Broj telefona:");

        lblVozackaDozvola.setText("Vozacka dozvola:");

        lblPrijavljeniZaposleni.setText("Prijavljeni zaposleni:");

        lblZaposleni.setText("jLabel1");

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImeIPrezime)
                            .addComponent(lblDatumRodjenja)
                            .addComponent(lblBrojTelefona))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dpDatum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                    .addComponent(txtImeIPrezime, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPrijavljeniZaposleni)
                                    .addComponent(lblZaposleni, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnIzmeni)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSacuvaj)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblVozackaDozvola)
                        .addGap(18, 18, 18)
                        .addComponent(cbVozackaDozvola, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImeIPrezime)
                    .addComponent(txtImeIPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrijavljeniZaposleni))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblDatumRodjenja)
                        .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblZaposleni))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBrojTelefona))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnSacuvaj))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVozackaDozvola)
                    .addComponent(cbVozackaDozvola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtImeIPrezimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImeIPrezimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImeIPrezimeActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        String imePrezime = txtImeIPrezime.getText();
        String brojTelefona = txtBrojTelefona.getText();
        String vozacka = (String) cbVozackaDozvola.getSelectedItem();
        Zaposleni z = sesija.Sesija.getInstanca().getZaposleni();

        Date datum = new Date();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

        try {
            datum = java.sql.Date.valueOf(format.format(dpDatum.getSelectedDate().getTime()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Morate uneti datum rodjenja");
            return;
        }
        boolean val = validacija(imePrezime, brojTelefona, vozacka, datum);
        if (val) {
            Klijent k = new Klijent((long) 0, imePrezime, datum, brojTelefona, vozacka, z);
            try {
                String poruka = Kontroler.getInstanca().unesiKlijenta(k);
                JOptionPane.showMessageDialog(this, poruka);
                sesija.Sesija.getInstanca().getMapa().put("trenutniKlijent", k);
                ((FrmDialog) SwingUtilities.getWindowAncestor(this)).dispose();
                if (((SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))) instanceof GlavnaForma) {
                    return;
                }
                (((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();
            } catch (NullPointerException e) {
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Neuspesno cuvanje");
                Logger.getLogger(PnlUnosKlijenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String imePrezime = txtImeIPrezime.getText();
        String brojTelefona = txtBrojTelefona.getText();
        String vozacka = (String) cbVozackaDozvola.getSelectedItem();
        Zaposleni z = sesija.Sesija.getInstanca().getZaposleni();

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date datum = java.sql.Date.valueOf(format.format(dpDatum.getSelectedDate().getTime()));

        Long id = ((Klijent) sesija.Sesija.getInstanca().getMapa().get("trenutniKlijent")).getIdKlijent();

        boolean val = validacija(imePrezime, brojTelefona, vozacka, datum);

        if (val) {
            Klijent k = new Klijent(id, imePrezime, datum, brojTelefona, vozacka, sesija.Sesija.getInstanca().getZaposleni());
            try {
                String poruka = Kontroler.getInstanca().izmeniKlijenta(k);
                JOptionPane.showMessageDialog(this, poruka);
                sesija.Sesija.getInstanca().getMapa().put("trenutniKlijent", k);
                ((FrmDialog) SwingUtilities.getWindowAncestor(this)).dispose();
                (((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();
            } catch (NullPointerException ex) {
                System.out.println("Greska");

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Neuspesna izmena");
                Logger.getLogger(PnlUnosKlijenta.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    public void napuniCB() {
        lblZaposleni.setText(sesija.Sesija.getInstanca().getZaposleni().toString());
        cbVozackaDozvola.removeAllItems();
        String niz[] = {"nema", "vazeca", "istekla"};
        for (int i = 0; i < niz.length; i++) {
            cbVozackaDozvola.addItem(niz[i]);
        }
    }

    private void pripremiFormu(ModForme model) {

        switch (model) {
            case unos:
                btnSacuvaj.setVisible(true);
                btnIzmeni.setVisible(false);
                break;
            case izmena:
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(true);
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutniKlijent"));
                break;
            case pregled:
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutniKlijent"));
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(false);
                txtImeIPrezime.setEditable(false);
                dpDatum.setEnabled(false);
                txtBrojTelefona.setEditable(false);
                cbVozackaDozvola.setEnabled(false);

        }
    }

    @Override
    public void popuniPolja(OpstaDomenskaKlasa odk) {
        Klijent k = (Klijent) odk;
        txtImeIPrezime.setText(k.getImePrezimeKlijent());
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(k.getDatumRodjenja());
        dpDatum.setSelectedDate(gc);
        txtBrojTelefona.setText(k.getBrojTelefona());
        cbVozackaDozvola.setSelectedItem(k.getVozackaDozvola());

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<String> cbVozackaDozvola;
    private datechooser.beans.DateChooserCombo dpDatum;
    private javax.swing.JLabel lblBrojTelefona;
    private javax.swing.JLabel lblDatumRodjenja;
    private javax.swing.JLabel lblImeIPrezime;
    private javax.swing.JLabel lblPrijavljeniZaposleni;
    private javax.swing.JLabel lblVozackaDozvola;
    private javax.swing.JLabel lblZaposleni;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JTextField txtImeIPrezime;
    // End of variables declaration//GEN-END:variables

    private boolean validacija(String imePrezime, String brojTelefona, String vozacka, Date datum) {
        if (imePrezime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti ime i prezime");
            return false;
        }
        if (brojTelefona.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti broj telefona");
            return false;
        }
        if(brojTelefona.length()<10){
            JOptionPane.showMessageDialog(this, "Broj telefona ima 10 cifara");
            return false;
        }
        Calendar c = Calendar.getInstance();
        c.set(c.get(Calendar.YEAR) - 16, c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH));
        if (datum.after(c.getTime())) {
            JOptionPane.showMessageDialog(this, "Klijent mora biti stariji od 16 godina");
            return false;
        }

        return true;
    }
}
